namespace Personal.Service.Repositories.Queries;

public partial class PersonPhysicalQuery
{
    public static string FindInfoPaginationSql = @"
SELECT 
	T.TOTAL								AS TOTAL,
	IFNULL(ROUND(T.TOTAL / @LIMIT), 0)	AS TOTALPAGES,
	IFNULL(@LIMIT, 0)					AS PERPAGE,
	IFNULL(@OFFSET, 0)					AS PAGE
FROM (
	SELECT	
		COUNT(*) AS TOTAL
	FROM
		PERSON AS P
    WHERE 
			P.DELETED_AT IS NULL
		AND {0}
) AS T
";

    public static string FindPersonUsingPagination = @"
SELECT
	T.ID 			AS ID,
	T.NAME 			AS NAME,
	T.CALLNAME 		AS CALLNAME,
	T.PERSONTYPE 	AS PERSONTYPE,
	T.BIRTHDATE		AS BIRTHDATE,
	T.ENTERPRISEID	AS ENTERPRISEID,
	T.VERSION		AS VERSION
FROM (
	SELECT
		P.PERSONID 		AS ID,
		P.NAME 			AS NAME,
		P.CALLNAME 		AS CALLNAME,
		P.PERSONTYPE 	AS PERSONTYPE,
		P.CREATEDATE	AS BIRTHDATE,
		P.ENTERPRISEID	AS ENTERPRISEID,
		P.VERSION		AS VERSION
	FROM PERSON AS P
    WHERE 
			P.DELETED_AT IS NULL
		AND {0}
) AS T
LIMIT @LIMIT OFFSET @OFFSET
";

    public static string BaseFindPersonSql = @"
SELECT 
	`P`.`PERSONID` 		AS `ID`,
	`P`.`NAME` 			AS `NAME`,
	`P`.`PERSONTYPE` 	AS `PERSONTYPE`,
	`P`.`CALLNAME` 		AS `CALLNAME`,
	`P`.`ENTERPRISEID` 	AS `ENTERPRISEID`,
	`P`.`VERSION` 		AS `VERSION`,
  	`P`.`CREATEDATE` 	AS `BIRTHDATE`
FROM 
	`PERSON` AS `P`
WHERE 
		`P`.`DELETED_AT` IS NULL
";

    public static string FindByIdSql = @$"
{BaseFindPersonSql}
	AND `P`.`PERSONID` = @PERSONID
";
}
