USE ERP_OPTICA;

# TABLES

CREATE TABLE IF NOT EXISTS DATABASE_PARAMETERS (
	PARAMETERID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    PARAMETERNAME VARCHAR(500) NOT NULL UNIQUE,
    PARAMETERVALUE TEXT NOT NULL,
    CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS `ENTERPRISE` (
	`ENTERPRISEID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `NAME` VARCHAR (200) NOT NULL UNIQUE,
    `DELETED_AT` DATETIME,
    `VERSION` INT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS `PERSON` (
	`PERSONID` BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `NAME` VARCHAR(500) NOT NULL,
    `PERSONTYPE` INT(3) NOT NULL,
    `CALLNAME` VARCHAR(500),
    `CREATEDATE` DATETIME,
    `DELETED_AT` DATETIME,
  	`ENTERPRISEID` INT NOT NULL,
	`VERSION` INT DEFAULT 0,
    
    FOREIGN KEY (`ENTERPRISEID`) REFERENCES `ENTERPRISE`(`ENTERPRISEID`)
);

CREATE TABLE IF NOT EXISTS `CREDENTIAL` (
	`CREDENTIALID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `PERSONID` BIGINT NOT NULL,
    `DELETED_AT` DATETIME,
    `FORCE_PASSWORD_CHANGE` TINYINT DEFAULT 0,
	`VERSION` INT DEFAULT 0,
    
    FOREIGN KEY (`PERSONID`) REFERENCES `PERSON` (`PERSONID`)
);

CREATE TABLE IF NOT EXISTS `AUTH` (
	`AUTHID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `NAME` TEXT NOT NULL, # SHA512
    `PASSPHRASE` TEXT NOT NULL, # DERIVATION KEY PBKDF2
    `CREDENTIALID` INT NOT NULL,
	`DELETED_AT` DATETIME,
	`VERSION` INT DEFAULT 0,

    FOREIGN KEY (`CREDENTIALID`) REFERENCES `CREDENTIAL` (`CREDENTIALID`)
);

CREATE TABLE IF NOT EXISTS `PAPER` (
	`PAPERID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `NAME` VARCHAR(500) NOT NULL,
    `ACTIVATED` TINYINT DEFAULT 0, 
    `DELETED_AT` DATETIME,
	`VERSION` INT DEFAULT 0
);

CREATE TABLE `CONTROL` (
  `DMLTYPEID` INT NOT NULL,
  `ENTITYTYPEID` INT NOT NULL,
  `ENTITYID` INT NOT NULL,
  `USERID` INT NOT NULL,
  `CONTROLDATE` DATETIME DEFAULT CURRENT_TIMESTAMP,
  `ENTERPRISEID` INT NOT NULL,

  FOREIGN KEY (`USERID`) REFERENCES `AUTH`(`AUTHID`),
  FOREIGN KEY (`ENTERPRISEID`) REFERENCES `ENTERPRISE`(`ENTERPRISEID`)
);

CREATE TABLE IF NOT EXISTS `CODE` (
    `AUTHID` INT NOT NULL,
    `CODE` VARCHAR(6),
    `CODETYPE` INT NOT NULL,
    `EXPIRE_IN` DATETIME,

    FOREIGN KEY (`AUTHID`) REFERENCES `AUTH`(`AUTHID`),
    PRIMARY KEY(`AUTHID`)
);

CREATE TABLE IF NOT EXISTS `ENTERPRISEXPERSON` (
	`ENTERPRISEID` INT NOT NULL,
    `PERSONID` BIGINT NOT NULL,
    
    FOREIGN KEY (`ENTERPRISEID`) REFERENCES `ENTERPRISE`(`ENTERPRISEID`),
    FOREIGN KEY (`PERSONID`) REFERENCES `PERSON`(`PERSONID`)
);

CREATE TABLE IF NOT EXISTS `AUTHXENTERPRISE` (
	`AUTHID` INT NOT NULL,
    `ENTERPRISEID` INT NOT NULL,
    `DELETED_AT` DATETIME,
    
    FOREIGN KEY (`AUTHID`) REFERENCES `AUTH`(`AUTHID`),
    FOREIGN KEY (`ENTERPRISEID`) REFERENCES `ENTERPRISE`(`ENTERPRISEID`)    
);

CREATE TABLE IF NOT EXISTS `PERMISSION` (
	`PERMISSIONID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `PERMISSIONNAME` VARCHAR(500) NOT NULL UNIQUE,
    `DELETED_AT` DATETIME,
	`VERSION` INT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS `AUTHXPAPER` (
	`AUTHID` INT NOT NULL,
    `PAPERID` INT NOT NULL,
    `DELETED_AT` DATETIME,
    
    FOREIGN KEY (`AUTHID`) REFERENCES `AUTH`(`AUTHID`),
    FOREIGN KEY (`PAPERID`) REFERENCES `PAPER`(`PAPERID`)    
);

CREATE TABLE IF NOT EXISTS `PAPERXENTERPRISE` (
    `PAPERID` INT NOT NULL,
	`ENTERPRISEID` INT NOT NULL,
        `DELETED_AT` DATETIME,

    FOREIGN KEY (`ENTERPRISEID`) REFERENCES `ENTERPRISE`(`ENTERPRISEID`),
    FOREIGN KEY (`PAPERID`) REFERENCES `PAPER`(`PAPERID`)    
);

CREATE TABLE IF NOT EXISTS `PAPERXPERMISSION` (
    `PAPERID` INT NOT NULL,
	`PERMISSIONID` INT NOT NULL,
    `DELETED_AT` DATETIME,
    
    FOREIGN KEY (`PERMISSIONID`) REFERENCES `PERMISSION`(`PERMISSIONID`),
    FOREIGN KEY (`PAPERID`) REFERENCES `PAPER`(`PAPERID`)    
);

CREATE TABLE IF NOT EXISTS `PERSONDOCUMENT` (
	`DOCUMENTID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `DOCUMENTTYPE` INT NOT NULL,
    `PERSONID` BIGINT NOT NULL,
    `VALUE` TEXT NOT NULL,
	`VERSION` INT DEFAULT 0,
    
    FOREIGN KEY (`PERSONID`) REFERENCES `PERSON`(`PERSONID`)
);

CREATE TABLE IF NOT EXISTS `PERSONCONTACT` (
	`CONTACTID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `CONTACTTYPE` INT NOT NULL,
    `PERSONID` BIGINT NOT NULL,
    `VALUE` TEXT NOT NULL,
	`VERSION` INT DEFAULT 0,

    FOREIGN KEY (`PERSONID`) REFERENCES `PERSON`(`PERSONID`)
);

CREATE TABLE IF NOT EXISTS `PERSONADDRESS` (
	`ADDRESSID` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `ADDRESSTYPE` INT NOT NULL,
    `PERSONID` BIGINT NOT NULL,
    `VALUE` TEXT NOT NULL,
	`VERSION` INT DEFAULT 0,

    FOREIGN KEY (`PERSONID`) REFERENCES `PERSON`(`PERSONID`)
);

CREATE TABLE `PAGES` (
	`PAGEID` INT NOT NULL AUTO_INCREMENT,
    `NAME` VARCHAR(500) NOT NULL,
    `PATH` VARCHAR(500) NOT NULL,
    `ICON` VARCHAR(500) NOT NULL,
    `LOGGED` TINYINT,
    `INDEX` TINYINT DEFAULT 0,
    
    PRIMARY KEY(`PAGEID`)
)

# END TABLES;

